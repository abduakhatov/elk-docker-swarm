version: "3.7"

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-6.5.0}
    hostname: "{{.Node.Hostname}}-elasticsearch"
    command: >
        echo vm.max_map_count=262144 >> /etc/sysctl.conf &&
        sysctl -p
    environment:
      - "ES_JAVA_OPTS: '-Xms256m -Xmx256m'"
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
      - xpack.security.enabled=true
      - xpack.monitoring.collection.enabled=true
      - xpack.license.self_generated.type=trial
      - cluster.name=DevOps
      - node.name={{.Node.Hostname}}-elasticsearch
      - network.host=0.0.0.0
    networks:
      - traefik-public
      - elastic-network
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    deploy:
      replicas: 1

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION:-6.5.0}
    hostname: "{{.Node.Hostname}}-logstash"
    environment:
      - XPACK_MONITORING_ELASTICSEARCH_URL=http://elasticsearch:9200
      - XPACK_MONITORING_ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - XPACK_MONITORING_ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
    networks:
      - traefik-public
      - elastic-network
    deploy:
      replicas: 1
      labels:
        - "traefik.port=5044"
        - "traefik.frontend.rule=Host:${DOMAIN};Path:/logstash"
        - "traefik.backend.loadbalancer.stickiness=true"
        - "traefik.backend=logstash"
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
    configs:
      - source: ls_config
        target: /usr/share/logstash/pipeline/logstash.conf

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION:-6.5.0}
    hostname: "{{.Node.Hostname}}-kibana"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
      - SERVER_NAME="{{.Node.Hostname}}-kibana"
    networks:
      - traefik-public
      - elastic-network
    volumes:
      - kibana:/usr/share/kibana/data
    deploy:
      replicas: 1
      labels:
        - "traefik.port=5601"
        - "traefik.frontend.rule=Host:${DOMAIN}"
        - "traefik.backend.loadbalancer.stickiness=true"
        - "traefik.backend=kibana"
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"

  traefik:
    image: traefik:v1.7.8
    hostname: "{{.Node.Hostname}}-traefik"
    command: 
      - "--docker"
      - "--docker.swarmmode"
      - "--docker.domain=${DOMAIN}"
      - "--docker.watch" 
      - "--logLevel=DEBUG"
      - "--docker.network=elastic"
      - "--api"
      - "--log"
      - "--entrypoints=Name:http Address::80"
      - "--defaultentrypoints=http"
      - "--docker.exposedbydefault=false"
      - "--accessLog"
    networks:
      - traefik-public
      - elastic-network
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role == manager"

networks:
    traefik-public:
      external: true
    elastic-network:
        driver: overlay
    

volumes:
  elasticsearch:
  kibana:

configs:
  ls_config:
    file: $PWD/logstash.conf